surface check
(
    color darkColor = color(0, 0, 0),    // Dark color for the background
    color lightColor = color(1, 1, 1),   // Light color for the stripe
    float repeatU = 5.5,                 // Repeat the texture pattern in the U direction (winding direction)
    float repeatV = 1.0,                 // Repeat the texture pattern in the V direction (vertical direction)
    float noiseScale = 0.1,              // Scale for noise (to add randomness)
    float width = 0.25,                  // Width of the spiral stripe
    output color resultRGB = color(0, 0, 0)
)
{
    // Adjust u and v to create the spiral effect
    float s = mod(u * repeatU, 1.0);   // s controls how the pattern wraps in the U direction
    float t = mod(v * repeatV, 1.0);   // t controls the vertical movement along the torus

    // Perlin noise based on the uv coordinates, to add some random variation
    point uv = point(u * 0.25, v * 0.8, 0); // Use scaled uv to add randomness
    float noiseValue = noise("perlin", uv) * noiseScale;

    // Create a smoothstep to define the boundaries of the stripe
    float linePos = smoothstep(0.05, 0.05, abs(t - s + noiseValue) < width);

    // Mix the dark and light colors based on the position inside the stripe
    color lineColor = mix(darkColor, lightColor, linePos);

    // Apply the result to the final color
    resultRGB = lineColor;
}
