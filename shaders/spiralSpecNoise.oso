OpenShadingLanguage 1.00
# Compiled by oslc 1.13.0.@PROJECT_VERSION_TWEAK@"dev"
# options: 
shader spiralSpecNoise
param	float	repeatU	5.5		%read{0,0} %write{2147483647,-1}
param	float	repeatV	1		%read{1,1} %write{2147483647,-1}
param	float	noiseFreq1	10		%read{9,9} %write{2147483647,-1}
param	float	maskScale	1		%read{17,21} %write{2147483647,-1}
param	color	colorA	0.850000024 0.75 0.600000024		%read{16,16} %write{2147483647,-1}
param	color	colorB	0.5 0.300000012 0.200000003		%read{16,16} %write{2147483647,-1}
oparam	color	resultRGB	0 0 0		%read{2147483647,-1} %write{16,16}
oparam	float	resultMask	0		%read{2147483647,-1} %write{20,20}
oparam	float	resultMask2	0		%read{2147483647,-1} %write{24,24}
global	point	P	%read{9,9} %write{2147483647,-1}
global	float	u	%read{0,0} %write{2147483647,-1}
global	float	v	%read{1,1} %write{2147483647,-1}
local	float	spiralCoord	%read{8,11} %write{7,7}
local	float	stripe	%read{2147483647,-1} %write{8,8}
local	float	n1	%read{12,12} %write{10,10}
local	float	noisyStripe	%read{16,21} %write{15,15}
temp	float	$tmp1	%read{2,2} %write{0,0}
temp	float	$tmp2	%read{2,2} %write{1,1}
temp	float	$tmp3	%read{4,7} %write{2,2}
const	float	$const1	1		%read{4,14} %write{2147483647,-1}
const	string	$const2	"mod"		%read{3,3} %write{2147483647,-1}
temp	float	$tmp4	%read{6,6} %write{5,5}
temp	float	$tmp5	%read{5,5} %write{4,4}
temp	float	$tmp6	%read{7,7} %write{6,6}
const	float	$const3	0.5		%read{8,11} %write{2147483647,-1}
const	string	$const4	"perlin"		%read{10,10} %write{2147483647,-1}
temp	point	$tmp7	%read{10,10} %write{9,9}
temp	float	$tmp8	%read{12,12} %write{11,11}
temp	float	$tmp9	%read{14,14} %write{12,12}
const	float	$const5	0		%read{15,15} %write{2147483647,-1}
const	string	$const6	"clamp"		%read{13,22} %write{2147483647,-1}
temp	float	$tmp10	%read{15,15} %write{14,14}
temp	float	$tmp11	%read{19,19} %write{17,17}
const	float	$const7	0.550000012		%read{20,20} %write{2147483647,-1}
const	float	$const8	0.800000012		%read{19,19} %write{2147483647,-1}
temp	float	$tmp12	%read{20,20} %write{19,19}
temp	float	$tmp13	%read{23,23} %write{21,21}
const	float	$const9	0.349999994		%read{24,24} %write{2147483647,-1}
const	float	$const10	0.600000024		%read{23,23} %write{2147483647,-1}
temp	float	$tmp14	%read{24,24} %write{23,23}
code ___main___
# spiralSpecNoise.osl:19
#     float spiralCoord = mod(u * repeatU + v * repeatV, 1.0);
	mul		$tmp1 u repeatU 	%filename{"spiralSpecNoise.osl"} %line{19} %argrw{"wrr"}
	mul		$tmp2 v repeatV 	%argrw{"wrr"}
	add		$tmp3 $tmp1 $tmp2 	%argrw{"wrr"}
	functioncall	$const2 8 	%argrw{"r"}
# /opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp5 $tmp3 $const1 	%filename{"/opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp4 $tmp5 	%argrw{"wr"}
	mul		$tmp6 $const1 $tmp4 	%argrw{"wrr"}
	sub		spiralCoord $tmp3 $tmp6 	%argrw{"wrr"}
# spiralSpecNoise.osl:22
#     float stripe = step(0.5, spiralCoord); 
	step		stripe $const3 spiralCoord 	%filename{"spiralSpecNoise.osl"} %line{22} %argrw{"wrr"}
# spiralSpecNoise.osl:25
#     float n1 = noise("perlin", P * noiseFreq1);  // procedural noise
	mul		$tmp7 P noiseFreq1 	%line{25} %argrw{"wrr"}
	noise		n1 $const4 $tmp7 	%argrw{"wrr"}
# spiralSpecNoise.osl:26
#     float noisyStripe = clamp(n1 + spiralCoord * 0.5, 0.0, 1.0);  // blend noise + spiral
	mul		$tmp8 spiralCoord $const3 	%line{26} %argrw{"wrr"}
	add		$tmp9 n1 $tmp8 	%argrw{"wrr"}
	functioncall	$const6 16 	%argrw{"r"}
# /opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp10 $tmp9 $const1 	%filename{"/opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h"} %line{141} %argrw{"wrr"}
	max		noisyStripe $tmp10 $const5 	%argrw{"wrr"}
# spiralSpecNoise.osl:29
#     resultRGB = mix(colorA, colorB, noisyStripe);
	mix		resultRGB colorA colorB noisyStripe 	%filename{"spiralSpecNoise.osl"} %line{29} %argrw{"wrrr"}
# spiralSpecNoise.osl:30
#     resultMask = clamp(noisyStripe * maskScale, 0.550, 0.80);
	mul		$tmp11 noisyStripe maskScale 	%line{30} %argrw{"wrr"}
	functioncall	$const6 21 	%argrw{"r"}
# /opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp12 $tmp11 $const8 	%filename{"/opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h"} %line{141} %argrw{"wrr"}
	max		resultMask $tmp12 $const7 	%argrw{"wrr"}
# spiralSpecNoise.osl:31
#     resultMask2 = clamp(noisyStripe * maskScale, 0.350, 0.60);
	mul		$tmp13 noisyStripe maskScale 	%filename{"spiralSpecNoise.osl"} %line{31} %argrw{"wrr"}
	functioncall	$const6 25 	%argrw{"r"}
# /opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp14 $tmp13 $const10 	%filename{"/opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h"} %line{141} %argrw{"wrr"}
	max		resultMask2 $tmp14 $const9 	%argrw{"wrr"}
	end
