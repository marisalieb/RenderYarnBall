shader
disp(
    float scale1 = 1.0,           // Larger spiral scale
    float repeatU1 = 5.5,
    float repeatV1 = 1.0,

    float scale2 = 0.2,           // Smaller spiral scale
    float repeatU2 = 2.5,
    float repeatV2 = 0.5,

    float noiseAmount = 0.05,     // Strength of the noisy bump
    float noiseFreq = 10.0,       // Frequency of noise
    float noiseSmooth = 0.0,      // Future use or filtering, if needed

    output float resultF = 0.0
)
{
    // Larger spiral (goes one way)
    float spiralCoord1 = mod(u * repeatU1 + v * repeatV1, 1.0);
    float raw1 = 0.5 + 0.5 * sin(spiralCoord1 * 2.0 * M_PI);
    float blend1 = pow(raw1, 0.25);  // Bias toward bright displacement

    // Smaller spiral (goes the opposite way)
    float spiralCoord2 = mod(u * repeatU2 + v * repeatV2, 1.0);
    float raw2 = 0.5 + 0.5 * sin(spiralCoord2 * 2.0 * M_PI);  // Negative for opposite direction
    float blend2 = pow(raw2, 0.25);  // Bias toward bright displacement

    // Noise bump
    float n = noise("perlin", P * noiseFreq);  // procedural noise
    float noisyBump = (n - 0.5) * 2.0 * noiseAmount; // Centered at 0

    // Combine
    resultF = scale1 * blend1 + scale2 * blend2 + noisyBump;
}
